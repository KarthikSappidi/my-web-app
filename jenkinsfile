pipeline {
    agent any

stages {
    stage('clean workspace') {
        steps {
            cleanWs()

        }
    }
    stage('Checkout from Git') {
        steps {
            git branch: 'main', url: 'https://github.com/KarthikSappidi/my-web-app.git'
        }
    }
    stage('Sonarqube Analysis') {
        steps {
            withSonarQubeEnv('sonar-server') {
                sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=portfolio \
                -Dsonar.projectKey=portfolio '''
            }
        }
    }
    stage('quality gate') {
        steps {
            script {
                waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token'
            }
        }
    }
    stage('Install Dependencies') {
        steps {
            sh 'apt-get update' && \
            sh 'apt-get install -y python3 python3-pip' && \
            sh 'pip install -r requirements.txt'
        }
    }
    stage('Docker Build & Push') {
        steps{
            script{
                withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                    sh 'docker build -t karthiksappidi/web:v1 .'
                    sh 'docker push karthiksappidi/web:v1'
                }
            }
        }
    }
    stage('Deploy to container') {
        steps{
            sh 'docker container run -dt --name web -p 8000:8000 karthiksappidi/web:v1'
        }
    }
}
}
